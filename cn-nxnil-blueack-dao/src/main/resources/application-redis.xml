<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="true">


    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="maxRedirects" value="3"/>
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${spring.redis.cluster.nodes[0].host}"/>
                    <constructor-arg name="port" value="${spring.redis.cluster.nodes[0].port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${spring.redis.cluster.nodes[1].host}"/>
                    <constructor-arg name="port" value="${spring.redis.cluster.nodes[1].port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode ">
                    <constructor-arg name="host" value="${spring.redis.cluster.nodes[2].host}"/>
                    <constructor-arg name="port" value="${spring.redis.cluster.nodes[2].port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${spring.redis.cluster.nodes[3].host}"/>
                    <constructor-arg name="port" value="${spring.redis.cluster.nodes[3].port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${spring.redis.cluster.nodes[4].host}"/>
                    <constructor-arg name="port" value="${spring.redis.cluster.nodes[4].port}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode ">
                    <constructor-arg name="host" value="${spring.redis.cluster.nodes[5].host}"/>
                    <constructor-arg name="port" value="${spring.redis.cluster.nodes[5].port}"/>
                </bean>
            </set>
        </property>
    </bean>


    <!--<bean id="jedisConnectionFactory"-->
    <!--class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
    <!--<property name="hostName" value="localhost"/>-->
    <!--<property name="port" value="6379"/>-->
    <!--</bean>-->

    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="redisClusterConfiguration"/>
        <constructor-arg ref="poolConfig"/>
    </bean>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}"></property>
        <property name="minIdle" value="${redis.pool.minIdle}"></property>
        <property name="maxTotal" value="${redis.pool.maxTotal}"></property>
        <!--<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"/>-->
        <!--<property name="softMinEvictableIdleTimeMillis" value="${redis.pool.softMinEvictableIdleTimeMillis}"></property>-->
        <!--&lt;!&ndash; 默认为true，当资源耗尽时，是否阻塞等待获取资源 &ndash;&gt;-->
        <!--<property name="blockWhenExhausted" value="${redis.pool.blockWhenExhausted}" />-->
        <!--&lt;!&ndash; 默认为-1, 获取资源时的等待时间，单位毫秒。当 blockWhenExhausted 配置为 true 时，此值有效。 -1 代表无时间限制，一直阻塞直到有可用的资源。 &ndash;&gt;-->
        <!--<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />-->
        <property name="testOnCreate" value="${redis.pool.testOnCreate}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="defaultSerializer">
            <bean
                    class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean
                    class="cn.nxnil.blueack.redis.RedisJsonSerializer">
            </bean>
        </property>
        <property name="hashValueSerializer">
            <bean
                    class="cn.nxnil.blueack.redis.RedisJsonSerializer">
            </bean>
        </property>
    </bean>


    <bean name="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
    </bean>

    <bean id="jedisCluster" class="com.yh.b2b.adaptor.redis.impl.JedisClusterFactory">
        <property name="addressConfig" value="classpath:redis.properties"/>
        <property name="addressKeyPrefix" value="address"/>   <!-- 属性文件里 key的前缀 -->
        <property name="connTimeout" value="300000"/>
        <property name="maxRedirectTimes" value="6"/>
        <property name="genericObjectPoolConfig" ref="genericObjectPoolConfig"/>
    </bean>
    <bean id="bizCache" class="com.yh.b2b.adaptor.redis.impl.RedisCache">
        <property name="jedisCluster" ref="jedisCluster"/>
    </bean>


</beans>
