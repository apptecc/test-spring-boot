<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nxnil.blueack.dmscenter.dao.LogTaskErrorMapper">
    <resultMap id="BaseResultMap" type="cn.nxnil.blueack.dmscenter.model.LogTaskError">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="task_code" property="taskCode" jdbcType="VARCHAR"/>
        <result column="data_code" property="dataCode" jdbcType="VARCHAR"/>
        <result column="consuming" property="consuming" jdbcType="BIGINT"/>
        <result column="error_msg" property="errorMsg" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="updated_time" property="updatedTime" jdbcType="TIMESTAMP"/>
        <result column="updated_by" property="updatedBy" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, task_code, data_code, consuming, error_msg, remarks, created_time, created_by,
        updated_time, updated_by
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from log_task_error
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from log_task_error
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="cn.nxnil.blueack.dmscenter.model.LogTaskError">
        insert into log_task_error (id, task_code, data_code,
        consuming, error_msg, remarks,
        created_time, created_by, updated_time,
        updated_by)
        values (#{id,jdbcType=BIGINT}, #{taskCode,jdbcType=VARCHAR}, #{dataCode,jdbcType=VARCHAR},
        #{consuming,jdbcType=BIGINT}, #{errorMsg,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},
        #{createdTime,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP},
        #{updatedBy,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.nxnil.blueack.dmscenter.model.LogTaskError">
        insert into log_task_error
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="taskCode != null">
                task_code,
            </if>
            <if test="dataCode != null">
                data_code,
            </if>
            <if test="consuming != null">
                consuming,
            </if>
            <if test="errorMsg != null">
                error_msg,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="taskCode != null">
                #{taskCode,jdbcType=VARCHAR},
            </if>
            <if test="dataCode != null">
                #{dataCode,jdbcType=VARCHAR},
            </if>
            <if test="consuming != null">
                #{consuming,jdbcType=BIGINT},
            </if>
            <if test="errorMsg != null">
                #{errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                #{updatedBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.nxnil.blueack.dmscenter.model.LogTaskError">
        update log_task_error
        <set>
            <if test="taskCode != null">
                task_code = #{taskCode,jdbcType=VARCHAR},
            </if>
            <if test="dataCode != null">
                data_code = #{dataCode,jdbcType=VARCHAR},
            </if>
            <if test="consuming != null">
                consuming = #{consuming,jdbcType=BIGINT},
            </if>
            <if test="errorMsg != null">
                error_msg = #{errorMsg,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedBy != null">
                updated_by = #{updatedBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.nxnil.blueack.dmscenter.model.LogTaskError">
        update log_task_error
        set task_code = #{taskCode,jdbcType=VARCHAR},
        data_code = #{dataCode,jdbcType=VARCHAR},
        consuming = #{consuming,jdbcType=BIGINT},
        error_msg = #{errorMsg,jdbcType=VARCHAR},
        remarks = #{remarks,jdbcType=VARCHAR},
        created_time = #{createdTime,jdbcType=TIMESTAMP},
        created_by = #{createdBy,jdbcType=VARCHAR},
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
        updated_by = #{updatedBy,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>